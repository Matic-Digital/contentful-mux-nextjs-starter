# Development Docker Compose Configuration
# This file is optimized for local development with hot-reloading and debugging

services:
  # Main application service
  app:
    # Custom container name
    container_name: Matic-Docker-App
    # Custom image name
    image: matic-docker-app:dev
    # Build from local Dockerfile optimized for development
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - NODE_ENV=development
    
    # Enable container restarts
    restart: unless-stopped
    
    # Map container ports to host
    ports:
      - "3000:3000"     # Next.js application
      # Node.js debugger port is now optional and configured via environment
    
    # Mount local directories for development
    volumes:
      # Source code (enables hot reloading)
      - ..:/app:delegated
      # Node modules (cached in Docker volume)
      - node_modules:/app/node_modules
      # Next.js build cache (faster rebuilds)
      - next-cache:/app/.next/cache
    
    # Load environment variables
    env_file:
      - ../.env.development
    
    # Set development environment variables
    environment:
      - NODE_ENV=development
      - HOSTNAME=0.0.0.0
      - PORT=3000
      # Disable Next.js telemetry
      - NEXT_TELEMETRY_DISABLED=1
      # Node.js debugging is now optional
    
    # Health check to ensure container is running properly
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    
    # Enable hot reload for development
    command: npm run dev
    
    # Development tools
    stdin_open: true  # Keep STDIN open for debugging
    tty: true        # Allocate a pseudo-TTY

# Named volumes for caching
volumes:
  # Persist node_modules to avoid reinstalling on every build
  node_modules:
    name: matic-docker-node-modules
  # Cache Next.js build files for faster rebuilds
  next-cache:
    name: matic-docker-next-cache
